{"_id":"tmatch","_rev":"8-e5468ad67479bc9cc1c79ebe09ed0835","name":"tmatch","description":"This module exists to facilitate the `t.match()` method in [`tap`](http://npm.im/tap).","dist-tags":{"latest":"2.0.1"},"versions":{"1.0.0":{"name":"tmatch","version":"1.0.0","description":"This module exists to facilitate the `t.match()` method in [`tap`](http://npm.im/tap).","main":"index.js","scripts":{"test":"tap test/*.js"},"repository":{"type":"git","url":"git+https://github.com/isaacs/tmatch.git"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"license":"ISC","bugs":{"url":"https://github.com/isaacs/tmatch/issues"},"homepage":"https://github.com/isaacs/tmatch#readme","devDependencies":{"tap":"^1.4.1"},"gitHead":"a222e1991bcddac0a5411c9eefb1f42e595271e5","_id":"tmatch@1.0.0","_shasum":"efdeabe9d454abe25362c50da2ec04f1f7b0bbc3","_from":".","_npmVersion":"3.3.2","_nodeVersion":"4.0.0","_npmUser":{"name":"isaacs","email":"isaacs@npmjs.com"},"dist":{"shasum":"efdeabe9d454abe25362c50da2ec04f1f7b0bbc3","tarball":"https://registry.npmjs.org/tmatch/-/tmatch-1.0.0.tgz"},"maintainers":[{"name":"isaacs","email":"isaacs@npmjs.com"}],"directories":{}},"1.0.1":{"name":"tmatch","version":"1.0.1","description":"This module exists to facilitate the `t.match()` method in [`tap`](http://npm.im/tap).","main":"index.js","scripts":{"test":"tap test/*.js"},"repository":{"type":"git","url":"git+https://github.com/isaacs/tmatch.git"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"license":"ISC","bugs":{"url":"https://github.com/isaacs/tmatch/issues"},"homepage":"https://github.com/isaacs/tmatch#readme","devDependencies":{"tap":"^1.4.1"},"gitHead":"0727f39f226a8f31d39d99fe94df89a2e90e7419","_id":"tmatch@1.0.1","_shasum":"72c5b5ed8b2036afe13d773a80ebb6137cd7dfdc","_from":".","_npmVersion":"3.3.2","_nodeVersion":"4.0.0","_npmUser":{"name":"isaacs","email":"isaacs@npmjs.com"},"dist":{"shasum":"72c5b5ed8b2036afe13d773a80ebb6137cd7dfdc","tarball":"https://registry.npmjs.org/tmatch/-/tmatch-1.0.1.tgz"},"maintainers":[{"name":"isaacs","email":"isaacs@npmjs.com"}],"directories":{}},"1.0.2":{"name":"tmatch","version":"1.0.2","description":"This module exists to facilitate the `t.match()` method in [`tap`](http://npm.im/tap).","main":"index.js","scripts":{"test":"tap test/*.js"},"repository":{"type":"git","url":"git+https://github.com/isaacs/tmatch.git"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"license":"ISC","bugs":{"url":"https://github.com/isaacs/tmatch/issues"},"homepage":"https://github.com/isaacs/tmatch#readme","devDependencies":{"tap":"^1.4.1"},"gitHead":"4a9666de9445ba3baa57b707df5db5f335368fca","_id":"tmatch@1.0.2","_shasum":"458c7948de0bd522c781fc41235769aa3c447257","_from":".","_npmVersion":"3.3.2","_nodeVersion":"4.0.0","_npmUser":{"name":"isaacs","email":"isaacs@npmjs.com"},"dist":{"shasum":"458c7948de0bd522c781fc41235769aa3c447257","tarball":"https://registry.npmjs.org/tmatch/-/tmatch-1.0.2.tgz"},"maintainers":[{"name":"isaacs","email":"isaacs@npmjs.com"}],"directories":{}},"2.0.0":{"name":"tmatch","version":"2.0.0","description":"This module exists to facilitate the `t.match()` method in [`tap`](http://npm.im/tap).","main":"index.js","scripts":{"test":"tap test/*.js --coverage --branches=100"},"repository":{"type":"git","url":"git+https://github.com/isaacs/tmatch.git"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"license":"ISC","bugs":{"url":"https://github.com/isaacs/tmatch/issues"},"homepage":"https://github.com/isaacs/tmatch#readme","devDependencies":{"tap":"^5.5.0"},"gitHead":"ea98aaa7ef1d1c4cdab4b332b3203c3a41742c80","_id":"tmatch@2.0.0","_shasum":"813e62c36556a446b3c909cf5194be354bc6802c","_from":".","_npmVersion":"3.7.3","_nodeVersion":"5.6.0","_npmUser":{"name":"isaacs","email":"i@izs.me"},"dist":{"shasum":"813e62c36556a446b3c909cf5194be354bc6802c","tarball":"https://registry.npmjs.org/tmatch/-/tmatch-2.0.0.tgz"},"maintainers":[{"name":"isaacs","email":"isaacs@npmjs.com"}],"_npmOperationalInternal":{"host":"packages-9-west.internal.npmjs.com","tmp":"tmp/tmatch-2.0.0.tgz_1455733616023_0.05554692237637937"},"directories":{}},"2.0.1":{"name":"tmatch","version":"2.0.1","description":"This module exists to facilitate the `t.match()` method in [`tap`](http://npm.im/tap).","main":"index.js","scripts":{"test":"tap test/*.js --coverage --branches=100"},"repository":{"type":"git","url":"git+https://github.com/isaacs/tmatch.git"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"license":"ISC","bugs":{"url":"https://github.com/isaacs/tmatch/issues"},"homepage":"https://github.com/isaacs/tmatch#readme","devDependencies":{"tap":"^5.5.0"},"gitHead":"e228fa7d9fbb528e1d00580ff1281adfaa5958d5","_id":"tmatch@2.0.1","_shasum":"0c56246f33f30da1b8d3d72895abaf16660f38cf","_from":".","_npmVersion":"3.7.3","_nodeVersion":"5.6.0","_npmUser":{"name":"isaacs","email":"i@izs.me"},"dist":{"shasum":"0c56246f33f30da1b8d3d72895abaf16660f38cf","tarball":"https://registry.npmjs.org/tmatch/-/tmatch-2.0.1.tgz"},"maintainers":[{"name":"isaacs","email":"isaacs@npmjs.com"}],"_npmOperationalInternal":{"host":"packages-6-west.internal.npmjs.com","tmp":"tmp/tmatch-2.0.1.tgz_1455743948119_0.04794123233295977"},"directories":{}}},"readme":"# tmatch\n\nThis module exists to facilitate the `t.match()` method in\n[`tap`](http://npm.im/tap).\n\nIt checks whether a value matches a given \"pattern\".  A pattern is an\nobject with a set of fields that must be in the test object, or a\nregular expression that a test string must match, or any combination\nthereof.\n\nThe algorithm is borrowed heavily from\n[`only-shallow`](http://npm.im/only-shallow), with some notable\ndifferences with respect to the handling of missing properties and the\nway that regular expressions are compared to strings.\n\n## usage\n\n```javascript\nvar matches = require('tmatch')\n\nif (!matches(testObject, pattern)) console.log(\"yay! diversity!\");\n\n// somewhat more realistic example..\nhttp.get(someUrl).on('response', function (res) {\n  var expect = {\n    statusCode: 200,\n    headers: {\n      server: /express/\n    }\n  }\n\n  if (!tmatch(res, expect)) {\n    throw new Error('Expect 200 status code from express server')\n  }\n})\n```\n\n## details\n\nCopied from the source, here are the details of `tmatch`'s algorithm:\n\n1. If the object loosely equals the pattern, then return true.  Note\n   that this covers object identity, some type coercion, and matching\n   `null` against `undefined`.\n2. If the object is a string, and the pattern is a RegExp, then return\n   true if `pattern.test(object)`.\n3. If the object is a string and the pattern is a non-empty string,\n   then return true if the string occurs within the object.\n5. If the object and the pattern are both Date objects, then return\n   true if they represent the same date.\n6. If the object is a Date object, and the pattern is a string, then\n   return true if the pattern is parseable as a date that is the same\n   date as the object.\n7. If the object is an `arguments` object, or the pattern is an\n   `arguments` object, then cast them to arrays and compare their\n   contents.\n8. If the pattern is the `Buffer` constructor, then return true if the\n   object is a Buffer.\n9. If the pattern is the `Function` constructor, then return true if\n   the object is a function.\n10. If the pattern is the String constructor, then return true if the\n    pattern is a string.\n11. If the pattern is the Boolean constructor, then return true if the\n    pattern is a boolean.\n12. If the pattern is the Array constructor, then return true if the\n    pattern is an array.\n13. If the pattern is any function, and then object is an object, then\n    return true if the object is an `instanceof` the pattern.\n14. At this point, if the object or the pattern are not objects, then\n    return false (because they would have matched earlier).\n15. If the object is a RegExp and the pattern is also a RegExp, return\n    true if their source, global, multiline, lastIndex, and ignoreCase\n    fields all match.\n16. If the object is a buffer, and the pattern is also a buffer, then\n    return true if they contain the same bytes.\n17. At this point, both object and pattern are object type values, so\n    compare their keys:\n    1. Get list of all iterable keys in pattern and object.  If both\n       are zero (two empty objects), return true.\n    2. Check to see if this pattern and this object have been tested\n       already (to handle cycles).  If so, return true, since the\n       check higher up in the stack will catch any mismatch.\n    3. For each key in the pattern, match it against the corresponding\n       key in object.  Missing keys in object will be resolved to\n       `undefined`, so it's possible to use `{foo:null}` as a pattern\n       to ensure that the object *doesn't* have a `foo` property.\n\n## license\n\nISC. Go nuts.\n","maintainers":[{"name":"isaacs","email":"isaacs@npmjs.com"}],"time":{"modified":"2016-02-17T21:19:10.307Z","created":"2015-09-22T07:05:38.933Z","1.0.0":"2015-09-22T07:05:38.933Z","1.0.1":"2015-09-22T21:27:32.809Z","1.0.2":"2015-09-23T21:37:02.249Z","1.1.0":"2016-02-17T17:38:48.174Z","2.0.0":"2016-02-17T18:26:58.170Z","2.0.1":"2016-02-17T21:19:10.307Z"},"homepage":"https://github.com/isaacs/tmatch#readme","repository":{"type":"git","url":"git+https://github.com/isaacs/tmatch.git"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"bugs":{"url":"https://github.com/isaacs/tmatch/issues"},"license":"ISC","readmeFilename":"README.md","users":{"moimikey":true},"_attachments":{},"_etag":"\"2Y9W5Q1QE56LFHC6DVK7IGS78\""}