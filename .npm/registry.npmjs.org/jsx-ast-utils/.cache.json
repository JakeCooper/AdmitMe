{"_id":"jsx-ast-utils","_rev":"9-6b0a947cef7ada64e0c4280f8ca75f5a","name":"jsx-ast-utils","description":"AST utility module for statically analyzing JSX","dist-tags":{"latest":"1.3.1"},"versions":{"1.0.0":{"name":"jsx-ast-utils","version":"1.0.0","description":"AST utility module for statically analyzing JSX","main":"lib/index.js","scripts":{"build":"rimraf lib && babel src --out-dir lib","prepublish":"npm run lint && npm run test && npm run build","coveralls":"cat ./reports/coverage/lcov.info | coveralls","lint":"eslint  --config .eslintrc .","pretest":"npm run lint","test":"istanbul cover --dir reports/coverage node_modules/mocha/bin/_mocha tests/**/*.js -- --compilers js:babel-core/register --reporter dot"},"devDependencies":{"acorn-jsx":"^3.0.1","babel-cli":"^6.6.0","babel-core":"^6.6.0","babel-eslint":"^6.0.0","babel-preset-es2015":"^6.6.0","coveralls":"^2.11.8","eslint":"^2.11.1","eslint-config-airbnb-base":"^3.0.1","eslint-plugin-import":"^1.8.1","istanbul":"^1.0.0-alpha.2","mocha":"^2.4.5","rimraf":"^2.5.2"},"engines":{"node":">=0.10.0"},"keywords":["jsx","ast","lint","eslint"],"author":{"name":"Ethan Cohen"},"repository":{"type":"git","url":"git+https://github.com/evcohen/jsx-ast-utils.git"},"license":"MIT","dependencies":{"object-assign":"^4.1.0"},"gitHead":"57013b84a382799340553632cc8b0b9892554965","bugs":{"url":"https://github.com/evcohen/jsx-ast-utils/issues"},"homepage":"https://github.com/evcohen/jsx-ast-utils#readme","_id":"jsx-ast-utils@1.0.0","_shasum":"ad326dc887a8caaab2c2fd937aa7e2dc2688ff04","_from":".","_npmVersion":"3.9.1","_nodeVersion":"6.1.0","_npmUser":{"name":"evcohen","email":"ethanvcohen@gmail.com"},"dist":{"shasum":"ad326dc887a8caaab2c2fd937aa7e2dc2688ff04","tarball":"https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-1.0.0.tgz"},"maintainers":[{"name":"evcohen","email":"ethanvcohen@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/jsx-ast-utils-1.0.0.tgz_1465505950235_0.04185824701562524"},"directories":{}},"1.0.1":{"name":"jsx-ast-utils","version":"1.0.1","description":"AST utility module for statically analyzing JSX","main":"lib/index.js","scripts":{"build":"rimraf lib && babel src --out-dir lib","prepublish":"npm run lint && npm run test && npm run build","coveralls":"cat ./reports/coverage/lcov.info | coveralls","lint":"eslint  --config .eslintrc .","pretest":"npm run lint","test":"istanbul cover --dir reports/coverage node_modules/mocha/bin/_mocha tests/**/*.js -- --compilers js:babel-core/register --reporter dot"},"devDependencies":{"acorn-jsx":"^3.0.1","babel-cli":"^6.6.0","babel-core":"^6.6.0","babel-eslint":"^6.0.0","babel-preset-es2015":"^6.6.0","coveralls":"^2.11.8","eslint":"^2.11.1","eslint-config-airbnb-base":"^3.0.1","eslint-plugin-import":"^1.8.1","istanbul":"^1.0.0-alpha.2","mocha":"^2.4.5","rimraf":"^2.5.2"},"engines":{"node":">=0.10.0"},"keywords":["jsx","ast","lint","eslint"],"author":{"name":"Ethan Cohen"},"repository":{"type":"git","url":"git+https://github.com/evcohen/jsx-ast-utils.git"},"license":"MIT","dependencies":{"object-assign":"^4.1.0"},"gitHead":"a72e944c6a7f5a0a3bbad4427d359d353123c691","bugs":{"url":"https://github.com/evcohen/jsx-ast-utils/issues"},"homepage":"https://github.com/evcohen/jsx-ast-utils#readme","_id":"jsx-ast-utils@1.0.1","_shasum":"ef00cecaa17e27553b0acd4e4ee8bbb4f4296809","_from":".","_npmVersion":"3.9.1","_nodeVersion":"6.1.0","_npmUser":{"name":"evcohen","email":"ethanvcohen@gmail.com"},"dist":{"shasum":"ef00cecaa17e27553b0acd4e4ee8bbb4f4296809","tarball":"https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-1.0.1.tgz"},"maintainers":[{"name":"evcohen","email":"ethanvcohen@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/jsx-ast-utils-1.0.1.tgz_1465585005594_0.605570120504126"},"directories":{}},"1.1.0":{"name":"jsx-ast-utils","version":"1.1.0","description":"AST utility module for statically analyzing JSX","main":"lib/index.js","scripts":{"build":"rimraf lib && babel src --out-dir lib","prepublish":"npm run lint && npm run test && npm run build","coveralls":"cat ./reports/coverage/lcov.info | coveralls","lint":"eslint  --config .eslintrc .","pretest":"npm run lint","test":"istanbul cover --dir reports/coverage node_modules/mocha/bin/_mocha tests/**/*.js -- --compilers js:babel-core/register --reporter dot"},"devDependencies":{"acorn-jsx":"^3.0.1","babel-cli":"^6.6.0","babel-core":"^6.6.0","babel-eslint":"^6.0.0","babel-preset-es2015":"^6.6.0","coveralls":"^2.11.8","eslint":"^2.11.1","eslint-config-airbnb-base":"^3.0.1","eslint-plugin-import":"^1.8.1","istanbul":"^1.0.0-alpha.2","mocha":"^2.4.5","rimraf":"^2.5.2"},"engines":{"node":">=0.10.0"},"keywords":["jsx","ast","lint","eslint"],"author":{"name":"Ethan Cohen"},"repository":{"type":"git","url":"git+https://github.com/evcohen/jsx-ast-utils.git"},"license":"MIT","dependencies":{"object-assign":"^4.1.0"},"gitHead":"36d85f94d3dbacbadd4ac66ae0dc12e8212b0a65","bugs":{"url":"https://github.com/evcohen/jsx-ast-utils/issues"},"homepage":"https://github.com/evcohen/jsx-ast-utils#readme","_id":"jsx-ast-utils@1.1.0","_shasum":"b02c75b300e06fef20c05fc1dc1ee9afc01ebda5","_from":".","_npmVersion":"3.9.1","_nodeVersion":"6.1.0","_npmUser":{"name":"evcohen","email":"ethanvcohen@gmail.com"},"dist":{"shasum":"b02c75b300e06fef20c05fc1dc1ee9afc01ebda5","tarball":"https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-1.1.0.tgz"},"maintainers":[{"name":"evcohen","email":"ethanvcohen@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/jsx-ast-utils-1.1.0.tgz_1465595273014_0.7705848752520978"},"directories":{}},"1.1.1":{"name":"jsx-ast-utils","version":"1.1.1","description":"AST utility module for statically analyzing JSX","main":"lib/index.js","scripts":{"build":"rimraf lib && babel src --out-dir lib","prepublish":"npm run lint && npm run test && npm run build","coveralls":"cat ./reports/coverage/lcov.info | coveralls","lint":"eslint  --config .eslintrc .","pretest":"npm run lint","test":"istanbul cover --dir reports/coverage node_modules/mocha/bin/_mocha tests/**/*.js -- --compilers js:babel-core/register --reporter dot"},"devDependencies":{"acorn-jsx":"^3.0.1","babel-cli":"^6.6.0","babel-core":"^6.6.0","babel-eslint":"^6.0.0","babel-preset-es2015":"^6.6.0","coveralls":"^2.11.8","eslint":"^2.11.1","eslint-config-airbnb-base":"^3.0.1","eslint-plugin-import":"^1.8.1","istanbul":"^1.0.0-alpha.2","mocha":"^2.4.5","rimraf":"^2.5.2"},"engines":{"node":">=0.10.0"},"keywords":["jsx","ast","lint","eslint"],"author":{"name":"Ethan Cohen"},"repository":{"type":"git","url":"git+https://github.com/evcohen/jsx-ast-utils.git"},"license":"MIT","dependencies":{"object-assign":"^4.1.0"},"gitHead":"1345ecf5277b1cc650d3f830ec73034d1f5592fa","bugs":{"url":"https://github.com/evcohen/jsx-ast-utils/issues"},"homepage":"https://github.com/evcohen/jsx-ast-utils#readme","_id":"jsx-ast-utils@1.1.1","_shasum":"02b3dac419a011656940cf777c3bd99f0661a4bc","_from":".","_npmVersion":"3.9.1","_nodeVersion":"6.1.0","_npmUser":{"name":"evcohen","email":"ethanvcohen@gmail.com"},"dist":{"shasum":"02b3dac419a011656940cf777c3bd99f0661a4bc","tarball":"https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-1.1.1.tgz"},"maintainers":[{"name":"evcohen","email":"ethanvcohen@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/jsx-ast-utils-1.1.1.tgz_1465774676677_0.6566750002093613"},"directories":{}},"1.2.0":{"name":"jsx-ast-utils","version":"1.2.0","description":"AST utility module for statically analyzing JSX","main":"lib/index.js","scripts":{"build":"rimraf lib && babel src --out-dir lib","prepublish":"npm run lint && npm run test && npm run build","coveralls":"cat ./reports/coverage/lcov.info | coveralls","lint":"eslint  --config .eslintrc .","pretest":"npm run lint","test":"istanbul cover --dir reports/coverage node_modules/mocha/bin/_mocha tests/**/*.js -- --compilers js:babel-core/register --reporter dot"},"devDependencies":{"acorn-jsx":"^3.0.1","babel-cli":"^6.6.0","babel-core":"^6.6.0","babel-eslint":"^6.0.0","babel-preset-es2015":"^6.6.0","coveralls":"^2.11.8","eslint":"^2.11.1","eslint-config-airbnb-base":"^3.0.1","eslint-plugin-import":"^1.8.1","istanbul":"^1.0.0-alpha.2","mocha":"^2.4.5","rimraf":"^2.5.2"},"engines":{"node":">=0.10.0"},"keywords":["jsx","ast","lint","eslint"],"author":{"name":"Ethan Cohen"},"repository":{"type":"git","url":"git+https://github.com/evcohen/jsx-ast-utils.git"},"license":"MIT","dependencies":{"object-assign":"^4.1.0"},"gitHead":"f50935301b62705c9ee862828e3360f87f1cce0e","bugs":{"url":"https://github.com/evcohen/jsx-ast-utils/issues"},"homepage":"https://github.com/evcohen/jsx-ast-utils#readme","_id":"jsx-ast-utils@1.2.0","_shasum":"934fc492790942be674945468338560d50729d66","_from":".","_npmVersion":"3.8.6","_nodeVersion":"5.11.1","_npmUser":{"name":"evcohen","email":"ethanvcohen@gmail.com"},"dist":{"shasum":"934fc492790942be674945468338560d50729d66","tarball":"https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-1.2.0.tgz"},"maintainers":[{"name":"evcohen","email":"ethanvcohen@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/jsx-ast-utils-1.2.0.tgz_1466013859235_0.21560986642725766"},"directories":{}},"1.2.1":{"name":"jsx-ast-utils","version":"1.2.1","description":"AST utility module for statically analyzing JSX","main":"lib/index.js","scripts":{"build":"rimraf lib && babel src --out-dir lib","prepublish":"npm run lint && npm run test && npm run build","coveralls":"cat ./reports/coverage/lcov.info | coveralls","lint":"eslint  --config .eslintrc .","pretest":"npm run lint","test":"istanbul cover -x '**/lib/**' --dir reports/coverage node_modules/mocha/bin/_mocha tests/**/*.js -- --compilers js:babel-core/register --reporter dot"},"devDependencies":{"acorn-jsx":"^3.0.1","babel-cli":"^6.6.0","babel-core":"^6.6.0","babel-eslint":"^6.0.0","babel-preset-es2015":"^6.6.0","coveralls":"^2.11.8","eslint":"^2.11.1","eslint-config-airbnb-base":"^3.0.1","eslint-plugin-import":"^1.8.1","istanbul":"^1.0.0-alpha.2","mocha":"^2.4.5","rimraf":"^2.5.2"},"engines":{"node":">=0.10.0"},"keywords":["jsx","ast","lint","eslint"],"author":{"name":"Ethan Cohen"},"repository":{"type":"git","url":"git+https://github.com/evcohen/jsx-ast-utils.git"},"license":"MIT","dependencies":{"object-assign":"^4.1.0"},"gitHead":"54e010d37fb4f6d4f7a6f785e38a26a477e41855","bugs":{"url":"https://github.com/evcohen/jsx-ast-utils/issues"},"homepage":"https://github.com/evcohen/jsx-ast-utils#readme","_id":"jsx-ast-utils@1.2.1","_shasum":"83e898cf125ec08f46f0d3b467321544bd60b7a0","_from":".","_npmVersion":"3.8.6","_nodeVersion":"5.11.1","_npmUser":{"name":"evcohen","email":"ethanvcohen@gmail.com"},"dist":{"shasum":"83e898cf125ec08f46f0d3b467321544bd60b7a0","tarball":"https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-1.2.1.tgz"},"maintainers":[{"name":"evcohen","email":"ethanvcohen@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/jsx-ast-utils-1.2.1.tgz_1466014700640_0.3706420324742794"},"directories":{}},"1.3.0":{"name":"jsx-ast-utils","version":"1.3.0","description":"AST utility module for statically analyzing JSX","main":"lib/index.js","scripts":{"build":"rimraf lib && babel src --out-dir lib","prepublish":"npm run lint && npm run test && npm run build","coveralls":"cat ./reports/coverage/lcov.info | coveralls","lint":"eslint  --config .eslintrc .","pretest":"npm run lint","test":"istanbul cover -x '**/lib/**' --dir reports/coverage node_modules/mocha/bin/_mocha tests/**/*.js -- --compilers js:babel-core/register --reporter dot"},"devDependencies":{"acorn-jsx":"^3.0.1","babel-cli":"^6.6.0","babel-core":"^6.6.0","babel-eslint":"^6.0.0","babel-preset-es2015":"^6.6.0","coveralls":"^2.11.8","eslint":"^2.11.1","eslint-config-airbnb-base":"^3.0.1","eslint-plugin-import":"^1.8.1","istanbul":"^1.0.0-alpha.2","mocha":"^2.4.5","rimraf":"^2.5.2"},"engines":{"node":">=0.10.0"},"keywords":["jsx","ast","lint","eslint"],"author":{"name":"Ethan Cohen"},"repository":{"type":"git","url":"git+https://github.com/evcohen/jsx-ast-utils.git"},"license":"MIT","dependencies":{"object-assign":"^4.1.0"},"gitHead":"a5fba3c246fa02097f73f3b8ff93158984216673","bugs":{"url":"https://github.com/evcohen/jsx-ast-utils/issues"},"homepage":"https://github.com/evcohen/jsx-ast-utils#readme","_id":"jsx-ast-utils@1.3.0","_shasum":"dcad64603036d740fb172aae90502507b977dd8f","_from":".","_npmVersion":"3.8.6","_nodeVersion":"5.11.1","_npmUser":{"name":"evcohen","email":"ethanvcohen@gmail.com"},"dist":{"shasum":"dcad64603036d740fb172aae90502507b977dd8f","tarball":"https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-1.3.0.tgz"},"maintainers":[{"name":"evcohen","email":"ethanvcohen@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/jsx-ast-utils-1.3.0.tgz_1468357578603_0.2603910486213863"},"directories":{}},"1.3.1":{"name":"jsx-ast-utils","version":"1.3.1","description":"AST utility module for statically analyzing JSX","main":"lib/index.js","scripts":{"build":"rimraf lib && babel src --out-dir lib","prepublish":"npm run lint && npm run test && npm run build","coveralls":"cat ./reports/coverage/lcov.info | coveralls","lint":"eslint  --config .eslintrc .","pretest":"npm run lint","test":"istanbul cover -x '**/lib/**' --dir reports/coverage node_modules/mocha/bin/_mocha tests/**/*.js -- --compilers js:babel-core/register --reporter dot"},"devDependencies":{"acorn-jsx":"^3.0.1","babel-cli":"^6.6.0","babel-core":"^6.6.0","babel-eslint":"^6.0.0","babel-preset-es2015":"^6.6.0","coveralls":"^2.11.8","eslint":"^2.11.1","eslint-config-airbnb-base":"^3.0.1","eslint-plugin-import":"^1.8.1","istanbul":"^1.0.0-alpha.2","mocha":"^2.4.5","rimraf":"^2.5.2"},"engines":{"node":">=0.10.0"},"keywords":["jsx","ast","lint","eslint"],"author":{"name":"Ethan Cohen"},"repository":{"type":"git","url":"git+https://github.com/evcohen/jsx-ast-utils.git"},"license":"MIT","dependencies":{"object-assign":"^4.1.0"},"gitHead":"b4485847e1f69a2eafdc387a4816f2ff87086822","bugs":{"url":"https://github.com/evcohen/jsx-ast-utils/issues"},"homepage":"https://github.com/evcohen/jsx-ast-utils#readme","_id":"jsx-ast-utils@1.3.1","_shasum":"14313c5c50da5b0c47020af5d1560c17e781a05a","_from":".","_npmVersion":"3.8.6","_nodeVersion":"5.11.1","_npmUser":{"name":"evcohen","email":"ethanvcohen@gmail.com"},"dist":{"shasum":"14313c5c50da5b0c47020af5d1560c17e781a05a","tarball":"https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-1.3.1.tgz"},"maintainers":[{"name":"evcohen","email":"ethanvcohen@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/jsx-ast-utils-1.3.1.tgz_1468421887991_0.8875111474189907"},"directories":{}}},"readme":"<p align=\"center\">\n  <a href=\"https://travis-ci.org/evcohen/jsx-ast-utils\">\n    <img src=\"https://api.travis-ci.org/evcohen/jsx-ast-utils.svg?branch=master\"\n         alt=\"build status\">\n  </a>\n  <a href=\"https://npmjs.org/package/jsx-ast-utils\">\n    <img src=\"https://img.shields.io/npm/v/jsx-ast-utils.svg\"\n         alt=\"npm version\">\n  </a>\n  <a href=\"https://github.com/evcohen/jsx-ast-utils/blob/master/LICENSE.md\">\n    <img src=\"https://img.shields.io/npm/l/jsx-ast-utils.svg\"\n         alt=\"license\">\n  </a>\n  <a href='https://coveralls.io/github/evcohen/jsx-ast-utils?branch=master'>\n    <img src='https://coveralls.io/repos/github/evcohen/jsx-ast-utils/badge.svg?branch=master' alt='Coverage Status' />\n  </a>\n  <a href='https://npmjs.org/package/jsx-ast-utils'>\n    <img src='https://img.shields.io/npm/dt/jsx-ast-utils.svg'\n    alt='Total npm downloads' />\n  </a>\n</p>\n\n# jsx-ast-utils\n\nAST utility module for statically analyzing JSX.\n\n## Installation\n```sh\n$ npm i jsx-ast-utils --save\n```\n\n## Usage\nThis is a utility module to evaluate AST objects for JSX syntax. This can be super useful when writing linting rules for JSX code. It was originally in the code for [eslint-plugin-jsx-a11y](https://github.com/evcohen/eslint-plugin-jsx-a11y), however I thought it could be useful to be extracted and maintained separately so **you** could write new interesting rules to statically analyze JSX.\n\n### ESLint example\n```js\nimport { hasProp } from 'jsx-ast-utils';\n// OR: var hasProp = require('jsx-ast-utils').hasProp;\n// OR: const hasProp = require('jsx-ast-utils/hasProp');\n// OR: import hasProp from 'jsx-ast-utils/hasProp';\n\nmodule.exports = context => ({\n  JSXOpeningElement: node => {\n    const onChange = hasProp(node.attributes, 'onChange');\n\n    if (onChange) {\n      context.report({\n        node,\n        message: `No onChange!`\n      });\n    }\n  }\n});\n```\n\n## API\n### AST Resources\n1. [JSX spec](https://github.com/facebook/jsx/blob/master/AST.md)\n2. [JS spec](https://github.com/estree/estree/blob/master/spec.md)\n\n### hasProp\n```js\nhasProp(props, prop, options);\n```\nReturns boolean indicating whether an prop exists as an attribute on a JSX element node.\n\n#### Props\nObject - The attributes on the visited node. (Usually `node.attributes`).\n#### Prop\nString - A string representation of the prop you want to check for existence.\n#### Options\nObject - An object representing options for existence checking\n  1. `ignoreCase` - automatically set to `true`.\n  2. `spreadStrict` - automatically set to `true`. This means if spread operator exists in\n     props, it will assume the prop you are looking for is not in the spread.\n     Example: `<div {...props} />` looking for specific prop here will return false if `spreadStrict` is `true`.\n\n<hr />\n### hasAnyProp\n```js\nhasAnyProp(props, prop, options);\n```\nReturns a boolean indicating if **any** of props in `prop` argument exist on the node.\n\n#### Props\nObject - The attributes on the visited node. (Usually `node.attributes`).\n#### Prop\nArray<String> - An array of strings representing the props you want to check for existence.\n#### Options\nObject - An object representing options for existence checking\n  1. `ignoreCase` - automatically set to `true`.\n  2. `spreadStrict` - automatically set to `true`. This means if spread operator exists in\n     props, it will assume the prop you are looking for is not in the spread.\n     Example: `<div {...props} />` looking for specific prop here will return false if `spreadStrict` is `true`.\n\n<hr />\n### hasEveryProp\n```js\nhasEveryProp(props, prop, options);\n```\nReturns a boolean indicating if **all** of props in `prop` argument exist on the node.\n\n#### Props\nObject - The attributes on the visited node. (Usually `node.attributes`).\n#### Prop\nArray<String> - An array of strings representing the props you want to check for existence.\n#### Options\nObject - An object representing options for existence checking\n 1. `ignoreCase` - automatically set to `true`.\n 2. `spreadStrict` - automatically set to `true`. This means if spread operator exists in\n    props, it will assume the prop you are looking for is not in the spread.\n    Example: `<div {...props} />` looking for specific prop here will return false if `spreadStrict` is `true`.\n\n<hr />\n### getProp\n```js\ngetProp(props, prop, options);\n```\nReturns the JSXAttribute itself or undefined, indicating the prop is not present on the JSXOpeningElement.\n\n#### Props\nObject - The attributes on the visited node. (Usually `node.attributes`).\n#### Prop\nString - A string representation of the prop you want to check for existence.\n#### Options\nObject - An object representing options for existence checking\n  1. `ignoreCase` - automatically set to `true`.\n\n<hr />\n### elementType\n```js\nelementType(node)\n```\nReturns the tagName associated with a JSXElement.\n\n#### Node\nObject - The visited JSXElement node object.\n\n<hr />\n### getPropValue\n```js\ngetPropValue(prop);\n```\nReturns the value of a given attribute. Different types of attributes have their associated values in different properties on the object.\n\nThis function should return the most *closely* associated value with the intention of the JSX.\n\n#### Prop\nObject - The JSXAttribute collected by AST parser.\n\n<hr />\n### getLiteralPropValue\n```js\ngetLiteralPropValue(prop);\n```\nReturns the value of a given attribute. Different types of attributes have their associated values in different properties on the object.\n\nThis function should return a value only if we can extract a literal value from its attribute (i.e. values that have generic types in JavaScript - strings, numbers, booleans, etc.)\n\n#### Prop\nObject - The JSXAttribute collected by AST parser.\n\n<hr />\n### propName\n```js\npropName(prop);\n```\nReturns the name associated with a JSXAttribute. For example, given `<div foo=\"bar\" />` and the JSXAttribute for `foo`, this will return the string `\"foo\"`.\n\n#### Prop\nObject - The JSXAttribute collected by AST parser.\n","maintainers":[{"name":"evcohen","email":"ethanvcohen@gmail.com"}],"time":{"modified":"2016-07-13T14:58:09.915Z","created":"2016-06-09T20:59:12.495Z","1.0.0":"2016-06-09T20:59:12.495Z","1.0.1":"2016-06-10T18:56:48.051Z","1.1.0":"2016-06-10T21:47:55.636Z","1.1.1":"2016-06-12T23:38:00.888Z","1.2.0":"2016-06-15T18:04:24.662Z","1.2.1":"2016-06-15T18:18:25.900Z","1.3.0":"2016-07-12T21:06:21.328Z","1.3.1":"2016-07-13T14:58:09.915Z"},"homepage":"https://github.com/evcohen/jsx-ast-utils#readme","keywords":["jsx","ast","lint","eslint"],"repository":{"type":"git","url":"git+https://github.com/evcohen/jsx-ast-utils.git"},"author":{"name":"Ethan Cohen"},"bugs":{"url":"https://github.com/evcohen/jsx-ast-utils/issues"},"license":"MIT","readmeFilename":"README.md","users":{"evcohen":true},"_attachments":{},"_etag":"\"71A7ITZ9W0MQ1OCVP63UPCY72\""}