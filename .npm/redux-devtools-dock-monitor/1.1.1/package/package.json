{"name":"redux-devtools-dock-monitor","version":"1.1.1","description":"A resizable and movable dock for Redux DevTools monitors","main":"lib/index.js","files":["lib","src"],"scripts":{"clean":"rimraf lib","build":"babel src --out-dir lib","lint":"eslint src test","test":"NODE_ENV=test mocha --compilers js:babel-core/register --recursive","test:watch":"NODE_ENV=test mocha --compilers js:babel-core/register --recursive --watch","prepublish":"npm run lint && npm run test && npm run clean && npm run build"},"repository":{"type":"git","url":"git+https://github.com/gaearon/redux-devtools-dock-monitor.git"},"keywords":["redux","devtools","flux","react","hot reloading","time travel","live edit"],"author":{"name":"Dan Abramov","email":"dan.abramov@me.com","url":"http://github.com/gaearon"},"license":"MIT","bugs":{"url":"https://github.com/gaearon/redux-devtools-dock-monitor/issues"},"homepage":"https://github.com/gaearon/redux-devtools-dock-monitor","devDependencies":{"babel-cli":"^6.3.15","babel-core":"^6.1.20","babel-eslint":"^5.0.0-beta4","babel-loader":"^6.2.0","babel-preset-es2015-loose":"^6.1.3","babel-preset-react":"^6.3.13","babel-preset-stage-0":"^6.3.13","eslint":"^0.23","eslint-config-airbnb":"0.0.6","eslint-plugin-react":"^3.6.3","expect":"^1.6.0","mocha":"^2.2.5","mocha-jsdom":"^1.0.0","rimraf":"^2.3.4","webpack":"^1.11.0"},"peerDependencies":{"react":"^0.14.0 || ^15.0.0-0","redux-devtools":"^3.0.0"},"dependencies":{"babel-runtime":"^6.2.0","parse-key":"^0.2.1","react-dock":"^0.2.1","react-pure-render":"^1.0.2"},"readme":"Redux DevTools Dock Monitor\n=========================\n\nA resizable and movable dock for [Redux DevTools](https://github.com/gaearon/redux-devtools).  \nPowered by [React Dock](https://github.com/alexkuz/react-dock).\n\n![](http://i.imgur.com/QbNzNW4.gif)\n\n### Installation\n\n```\nnpm install --save-dev redux-devtools-dock-monitor\n```\n\n### Usage\n\nWrap any other Redux DevTools monitor in `DockMonitor` to make it dockable to different screen edges.\nFor example, you can use it together with [`LogMonitor`](https://github.com/gaearon/redux-devtools-log-monitor):\n\n##### `containers/DevTools.js`\n\n```js\nimport React from 'react';\nimport { createDevTools } from 'redux-devtools';\nimport LogMonitor from 'redux-devtools-log-monitor';\nimport SliderMonitor from 'redux-slider-monitor';\nimport DockMonitor from 'redux-devtools-dock-monitor';\n\nexport default createDevTools(\n  <DockMonitor toggleVisibilityKey='ctrl-h'\n               changePositionKey='ctrl-q'\n               changeMonitorKey='ctrl-m'>\n    <LogMonitor />\n    <SliderMonitor />\n  </DockMonitor>\n);\n```\n\n[Read how to start using Redux DevTools.](https://github.com/gaearon/redux-devtools)\n\n#### Multiple Monitors\n\nYou can put more than one monitor inside `<DockMonitor>`. There will still be a single dock, but you will be able to switch between different monitors by pressing a key specified as `changeMonitorKey` prop.\n\n### Props\n\nName                  | Description\n-------------         | -------------\n`children`            | Any valid Redux DevTools monitor. Required.\n`toggleVisibilityKey` | A key or a key combination that toggles the dock visibility. Must be recognizable by [parse-key](https://github.com/thlorenz/parse-key) (for example, `'ctrl-h'`). Required.\n`changePositionKey`   | A key or a key combination that toggles the dock position. Must be recognizable by [parse-key](https://github.com/thlorenz/parse-key) (for example, `'ctrl-w'`). Required.\n`changeMonitorKey`   | A key or a key combination that switches the currently visible monitor. Must be recognizable by [parse-key](https://github.com/thlorenz/parse-key) (for example, `'ctrl-m'`). Required if you use more than one monitor.\n`fluid`               | When `true`, the dock size is a fraction of the window size, fixed otherwise. Optional. By default set to `true`.\n`defaultSize`         | Size of the dock. When `fluid` is `true`, a float (`0.5` means half the window size). When `fluid` is `false`, a width in pixels. Optional. By default set to `0.3` (3/10th of the window size).\n`defaultPosition`     | Where the dock appears on the screen. Valid values: `'left'`, `'top'`, `'right'`, `'bottom'`. Optional. By default set to `'right'`.\n`defaultIsVisible`    | Defines whether dock should be open by default. A value of `true` means that it's open when the page/app loads.\n\nThe current size and the position are persisted between sessions with `persistState()` enhancer from Redux DevTools.\n\n### License\n\nMIT\n","readmeFilename":"README.md","_id":"redux-devtools-dock-monitor@1.1.1","_from":"redux-devtools-dock-monitor@1.1.1"}