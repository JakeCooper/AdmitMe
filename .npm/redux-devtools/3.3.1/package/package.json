{"name":"redux-devtools","version":"3.3.1","description":"Redux DevTools with hot reloading and time travel","main":"lib/index.js","scripts":{"clean":"rimraf lib","build":"babel src --out-dir lib","lint":"eslint src test examples","test":"NODE_ENV=test mocha --compilers js:babel-core/register --recursive","test:watch":"NODE_ENV=test mocha --compilers js:babel-core/register --recursive --watch","test:cov":"babel-node ./node_modules/.bin/isparta cover ./node_modules/.bin/_mocha -- --recursive","prepublish":"npm run lint && npm run test && npm run clean && npm run build"},"files":["lib","src"],"repository":{"type":"git","url":"git+https://github.com/gaearon/redux-devtools.git"},"keywords":["redux","devtools","flux","hot reloading","time travel","live edit"],"author":{"name":"Dan Abramov","email":"dan.abramov@me.com","url":"http://github.com/gaearon"},"license":"MIT","bugs":{"url":"https://github.com/gaearon/redux-devtools/issues"},"homepage":"https://github.com/gaearon/redux-devtools","devDependencies":{"babel-cli":"^6.3.17","babel-core":"^6.3.17","babel-eslint":"^4.1.6","babel-loader":"^6.2.0","babel-preset-es2015-loose":"^6.1.3","babel-preset-react":"6.3.13","babel-preset-stage-0":"^6.3.13","eslint":"^0.23","eslint-config-airbnb":"0.0.6","eslint-plugin-react":"^2.3.0","expect":"^1.6.0","isparta":"^3.0.3","jsdom":"^6.5.1","mocha":"^2.2.5","mocha-jsdom":"^1.0.0","react":"^0.14.0","react-addons-test-utils":"^0.14.0","react-dom":"^0.14.0","rimraf":"^2.3.4","webpack":"^1.11.0"},"peerDependencies":{"redux":"^3.5.0","react":"^0.14.0 || ^15.0.0-rc.1"},"dependencies":{"lodash":"^4.2.0","react-redux":"^4.0.0","redux":"^3.5.2","redux-devtools-instrument":"^1.0.1"},"readme":"Redux DevTools\n=========================\n\nA live-editing time travel environment for [Redux](https://github.com/rackt/redux).  \n**[See Dan's React Europe talk demoing it!](http://youtube.com/watch?v=xsSnOQynTHs)**  \n\n### Table of Contents\n\n- [Features](#features)\n- [Overview](#overview)\n- [Chrome Extension](#chrome-extension)\n- [Setup Instructions](#setup-instructions)\n- [Custom Monitors](#custom-monitors)\n- [License](#license)\n\n[![build status](https://img.shields.io/travis/gaearon/redux-devtools/master.svg?style=flat-square)](https://travis-ci.org/gaearon/redux-devtools)\n[![npm version](https://img.shields.io/npm/v/redux-devtools.svg?style=flat-square)](https://www.npmjs.com/package/redux-devtools)\n[![npm downloads](https://img.shields.io/npm/dm/redux-devtools.svg?style=flat-square)](https://www.npmjs.com/package/redux-devtools)\n[![redux channel on discord](https://img.shields.io/badge/discord-redux@reactiflux-738bd7.svg?style=flat-square)](https://discord.gg/0ZcbPKXt5bWb10Ma)\n\n![](http://i.imgur.com/J4GeW0M.gif)\n\n### Features\n\n* Lets you inspect every state and action payload\n* Lets you go back in time by “cancelling” actions\n* If you change the reducer code, each “staged” action will be re-evaluated\n* If the reducers throw, you will see during which action this happened, and what the error was\n* With `persistState()` store enhancer, you can persist debug sessions across page reloads\n\n### Overview\n\nRedux DevTools is a development time package that provides power-ups for your Redux development workflow. Be careful to strip its code in production (see [walkthrough](./docs/Walkthrough.md) for instructions)! To use Redux DevTools, you need to choose a “monitor”—a React component that will serve as a UI for the DevTools. Different tasks and workflows require different UIs, so Redux DevTools is built to be flexible in this regard. We recommend using [`LogMonitor`](https://github.com/gaearon/redux-devtools-log-monitor) for inspecting the state and time travel, and wrap it in a [`DockMonitor`](https://github.com/gaearon/redux-devtools-dock-monitor) to quickly move it across the screen. That said, when you’re comfortable rolling up your own setup, feel free to do this, and share it with us.\n\nIf you came here looking for what do the “Reset”, “Revert”, “Sweep” or “Commit” buttons do, check out [the `LogMonitor` documentation](https://github.com/gaearon/redux-devtools-log-monitor/blob/master/README.md#features).\n\n### Chrome Extension\n\nIf you don’t want to bother with installing Redux DevTools and integrating it into your project, consider using [Redux DevTools Chrome Extension](https://github.com/zalmoxisus/redux-devtools-extension). It provides access to the most popular monitors, is easy to configure to filter actions, and doesn’t require installing any packages.\n\n### Setup Instructions\n\nRead the installation [walkthrough](./docs/Walkthrough.md) for integration instructions and usage examples (`<DevTools>` component, `DevTools.instrument()`, exclude from production builds, gotchas).\n\n### Running Examples\n\nClone the project:\n\n```\ngit clone https://github.com/gaearon/redux-devtools.git\ncd redux-devtools\n```\n\nRun `npm install` in the root folder:\n\n```\nnpm install\n```\n\nNow you can open an example folder and run `npm install` there:\n\n```\ncd examples/counter # or examples/todomvc\nnpm install\n```\n\nFinally, run the development server and open the page:\n\n```\nnpm start\nopen http://localhost:3000\n```\n\nTry clicking on actions in the log, or changing some code inside the reducers. You should see the action log re-evaluate the state on every code change.\n\nAlso try opening `http://localhost:3000/?debug_session=123`, click around, and then refresh. You should see that all actions have been restored from the local storage.\n\n### Custom Monitors\n\n**DevTools accepts monitor components so you can build a completely custom UI.** [`LogMonitor`](https://github.com/gaearon/redux-devtools-log-monitor) and [`DockMonitor`](https://github.com/gaearon/redux-devtools-dock-monitor) are just examples of what is possible.\n\n**[I challenge you to build a custom monitor for Redux DevTools!](https://github.com/gaearon/redux-devtools/issues/3)**\n\nSome crazy ideas for custom monitors:\n\n* A slider that lets you jump between computed states just by dragging it\n* An in-app layer that shows the last N states right in the app (e.g. for animation)\n* A time machine like interface where the last N states of your app reside on different Z layers\n* Feel free to come up with and implement your own! Check [`LogMonitor`](https://github.com/gaearon/redux-devtools-log-monitor) `propTypes` to see what you can do.\n\nIn fact some of these are implemented already:\n\n#### [Slider Monitor](https://github.com/calesce/redux-slider-monitor)\n\n![](https://camo.githubusercontent.com/47a3f427c9d2e0c763b74e33417b3001fe8604b6/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f662e636c2e6c792f6974656d732f3149335032323243334e3252314d3279314b33622f53637265656e2532305265636f7264696e67253230323031352d31322d3232253230617425323030372e3230253230504d2e6769663f763d3162363236376537)\n\n#### [Inspector](https://github.com/alexkuz/redux-devtools-inspector)\n\n![](http://i.imgur.com/fYh8fk5.gif)\n\n#### [Diff Monitor](https://github.com/whetstone/redux-devtools-diff-monitor)\n\n![](https://camo.githubusercontent.com/c2c0ba1ad82d003b5386404ae09c00763d73510c/687474703a2f2f692e696d6775722e636f6d2f72764352394f512e706e67)\n\n#### [Filterable Log Monitor](https://github.com/bvaughn/redux-devtools-filterable-log-monitor/)\n\n![redux-devtools-filterable-log-monitor](https://cloud.githubusercontent.com/assets/29597/12440009/182bb31c-beec-11e5-8fd0-bdda48e646b2.gif)\n\n#### [Chart Monitor](https://github.com/romseguy/redux-devtools-chart-monitor)\n\n![redux-devtools-chart-monitor](http://i.imgur.com/MSgvU6l.gif)\n\n#### [Filter Actions](https://github.com/zalmoxisus/redux-devtools-filter-actions)\n\n(Does not have a UI but can wrap any other monitor)\n\n<img src='http://i.imgur.com/TlqnU0J.png' width='400'>\n\n#### [Dispatch](https://github.com/YoruNoHikage/redux-devtools-dispatch)\n\n![redux-devtools-dispatch](https://cloud.githubusercontent.com/assets/969003/12874321/2c3624ec-cdd2-11e5-9856-fd7e24efb8d5.gif)\n\n#### Keep them coming!\n\nCreate a PR to add your custom monitor.\n\n### License\n\nMIT\n","readmeFilename":"README.md","_id":"redux-devtools@3.3.1","_from":"redux-devtools@3.3.1"}