{"name":"ignore-styles","version":"4.0.0","description":"Ignore imported style files when running in Node","main":"lib/ignore-styles.js","scripts":{"test":"standard ignore-styles.js && mocha --require babel-register","build":"babel ignore-styles.js -s -o lib/ignore-styles.js","watch":"babel ignore-styles.js -s -o lib/ignore-styles.js -w","prepublish":"npm run build"},"repository":{"type":"git","url":"git+https://github.com/bkonkle/ignore-styles.git"},"author":{"name":"Brandon Konkle","email":"brandon@konkle.us"},"license":"MIT","keywords":["webpack","css","testing"],"devDependencies":{"babel-cli":"^6.3.17","babel-plugin-transform-object-assign":"^6.3.13","babel-preset-es2015-loose":"^6.1.3","babel-preset-react":"^6.3.13","babel-register":"^6.3.13","chai":"^3.4.1","mocha":"^2.3.3","standard":"^7.1.2"},"readme":"# ignore-styles\n\n[![Version][version-svg]][package-url] [![Build Status][travis-svg]][travis-url] [![License][license-image]][license-url] [![Downloads][downloads-image]][downloads-url] [![Standard][standard-svg]][standard-url]\n\nA `babel/register` style hook to ignore style imports when running in Node. This\nis for projects that use something like Webpack to enable CSS imports in\nJavaScript. When you try to run the project in Node (to test in Mocha, for\nexample) you'll see errors like this:\n\n    SyntaxError: /Users/brandon/code/my-project/src/components/my-component/style.sass: Unexpected token (1:0)\n    > 1 | .title\n    | ^\n    2 |   font-family: serif\n    3 |   font-size: 10em\n    4 |\n\nTo resolve this, require `ignore-styles` with your mocha tests:\n\n    mocha --require ignore-styles\n\nSee [DEFAULT_EXTENSIONS][default-extensions] for the full list of extensions\nignored, and send a pull request if you need more.\n\n**Note:** This is not for use *inside* Webpack. If you want to ignore extensions in Webpack you'll want to use a loader like [ignore-loader]. This is for use in Node outside of your normal Webpack build.\n\n## Installation\n\n    $ npm install --save-dev ignore-styles\n\n## More Examples\n\nTo use this with multiple Mocha requires:\n\n    mocha --require babel-register --require ignore-styles\n\nYou can also use it just like `babel/register`:\n\n```js\nimport 'ignore-styles'\n```\n\nIn ES5:\n\n```js\nrequire('ignore-styles')\n```\n\nTo customize the extensions used:\n\n```js\nimport register from 'ignore-styles'\nregister(['.sass', '.scss'])\n```\n\nTo customize the extensions in ES5:\n\n```js\nrequire('ignore-styles')(['.sass', '.scss'])\n```\n\n## Custom handler\n\nBy default, a no-op handler is used that doesn't actually do anything. If you'd\nlike to substitute your own custom handler to do fancy things, pass it as a\nsecond argument:\n\n```js\nimport register from 'ignore-styles'\nregister(undefined, () => ({styleName: 'fake_class_name'}))\n```\n\nThe first argument to `register` is the list of extensions to handle. Leaving it\nundefined, as above, uses the default list. The handler function receives two arguments, `module` and `filename`, directly\nfrom Node.\n\nWhy is this useful? One example is when using something like\n[react-css-modules][react-css-modules]. You need the style imports to actually\nreturn something so that you can test the components, or the wrapper component\nwill throw an error. Use this to provide test class names.\n\nAnother use case would be to simply return the filename of an image so that it\ncan be verified in unit tests:\n\n```js\nregister(undefined, (module, filename) => {\n  if (_.some(['.png', '.jpg'], ext => filename.endsWith(ext))) {\n    return path.basename(filename)\n  }\n})\n```\n\nIf the filename ends in '.png' or '.jpg', then the basename of the file is\nreturned as the value of the module on import.\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Brainspace Corporation\n\n[travis-svg]: https://img.shields.io/travis/bkonkle/ignore-styles/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/bkonkle/ignore-styles\n[license-image]: http://img.shields.io/badge/license-MIT-green.svg?style=flat-square\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/ignore-styles.svg?style=flat-square\n[downloads-url]: http://npm-stat.com/charts.html?package=ignore-styles\n[version-svg]: https://img.shields.io/npm/v/ignore-styles.svg?style=flat-square\n[package-url]: https://npmjs.org/package/ignore-styles\n[standard-svg]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square\n[standard-url]: http://standardjs.com/\n[default-extensions]: https://github.com/bkonkle/ignore-styles/blob/master/ignore-styles.js#L1\n[react-css-modules]: https://github.com/gajus/react-css-modules\n[ignore-loader]: https://www.npmjs.com/package/ignore-loader\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bkonkle/ignore-styles/issues"},"homepage":"https://github.com/bkonkle/ignore-styles#readme","_id":"ignore-styles@4.0.0","_from":"ignore-styles@4.0.0"}