{"name":"react-dock","version":"0.2.3","description":"Resizable dockable react component","scripts":{"build-lib":"babel src --out-dir lib","build-demo":"NODE_ENV=production ./node_modules/.bin/webpack -p","stats":"webpack --profile --json > stats.json","start":"webpack-dev-server","lint":"eslint src","preversion":"npm run lint && npm test","version":"npm run build-demo && git add -A .","postversion":"git push","prepublish":"npm run build-lib","test":"mocha --compilers js:babel-core/register"},"main":"lib/index.js","repository":{"type":"git","url":"git+https://github.com/alexkuz/react-dock.git"},"keywords":["react","reactjs","dock","sidebar"],"author":{"name":"Alexander","email":"alexkuz@gmail.com","url":"http://kuzya.org/"},"license":"MIT","bugs":{"url":"https://github.com/alexkuz/react-dock/issues"},"homepage":"https://github.com/alexkuz/react-dock","devDependencies":{"babel":"^5.8.23","babel-core":"^5.8.25","babel-eslint":"^4.1.3","babel-loader":"^5.1.2","babel-runtime":"^5.8.24","chai":"^3.2.0","eslint":"^1.5.0","eslint-loader":"^1.0.0","eslint-plugin-babel":"^2.1.1","eslint-plugin-react":"^3.4.2","imports-loader":"^0.6.4","json-loader":"^0.5.2","mocha":"^2.3.2","raw-loader":"^0.5.1","react-bootstrap":"^0.24.2","react-hot-loader":"^1.2.8","react-pure-render":"^1.0.2","webpack":"^1.12.2","webpack-dev-server":"^1.11.0"},"peerDependencies":{"react":">=0.13.0"},"dependencies":{"lodash.debounce":"^3.1.1","object-assign":"^4.0.1"},"readme":"# react-dock\n\nResizable dockable react component.\n\n#### Demo\n\n[http://alexkuz.github.io/react-dock/demo/](http://alexkuz.github.io/react-dock/demo/)\n\n#### Install\n\n```\n$ npm i -S react-dock\n```\n\n#### Example\n\n```jsx\nrender() {\n  return (\n    <Dock position='right' isVisible={this.state.isVisible}>\n      {/* you can pass a function as a child here */}\n      <div onClick={() => this.setState({ isVisible: !this.state.isVisible })}>X</div>\n    </Dock>\n  );\n}\n```\n\n#### Dock Props\n\n| Prop Name | Description |\n|-----------|-------------|\n| position | Side to dock (`left`, `right`, `top` or `bottom`). Default is `left`. |\n| fluid | If `true`, resize dock proportionally on window resize. |\n| size | Size of dock panel (width or height, depending on `position`). It this prop is set, `Dock` is considered as a controlled component, so you need to use `onSizeChange` to track dock resizing. Value is a fraction of window width/height, if `fluid` is true, or pixels otherwise |\n| defaultSize | Default size of dock panel (used for uncontrolled `Dock` component) |\n| isVisible | If `true`, dock is visible |\n| dimMode | If `none` - content is not dimmed, if `transparent` - pointer events are disabled (so you can click through it), if `opaque` - click on dim area closes the dock. Default is `opaque` |\n| duration | Animation duration. Should be synced with transition animation in style properties |\n| dimStyle | Style for dim area |\n| dockStyle | Style for dock |\n| zIndex | Z-index for wrapper |\n| onVisibleChange | Fires when `Dock` wants to change `isVisible` (when opaque dim is clicked, in particular) |\n| onSizeChange | Fires when `Dock` wants to change `size` |\n| children | Dock content - react elements or function that returns an element. Function receives an object with these state values: `{ position, isResizing, size, isVisible }`  |\n","readmeFilename":"README.md","_id":"react-dock@0.2.3","_from":"react-dock@>=0.2.1 <0.3.0"}