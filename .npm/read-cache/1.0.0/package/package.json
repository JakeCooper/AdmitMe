{"name":"read-cache","version":"1.0.0","description":"Reads and caches the entire contents of a file until it is modified","files":["index.js"],"main":"index.js","scripts":{"test":"ava"},"repository":{"type":"git","url":"git+https://github.com/TrySound/read-cache.git"},"keywords":["fs","read","cache"],"author":{"name":"Bogdan Chadkin","email":"trysound@yandex.ru"},"license":"MIT","bugs":{"url":"https://github.com/TrySound/read-cache/issues"},"homepage":"https://github.com/TrySound/read-cache#readme","devDependencies":{"ava":"^0.9.1","del":"^2.2.0"},"dependencies":{"pify":"^2.3.0"},"readme":"# read-cache [![Build Status](https://travis-ci.org/TrySound/read-cache.svg?branch=master)](https://travis-ci.org/TrySound/read-cache)\r\n\r\nReads and caches the entire contents of a file until it is modified.\r\n\r\n\r\n## Install\r\n\r\n```\r\n$ npm i read-cache\r\n```\r\n\r\n\r\n## Usage\r\n\r\n```js\r\n// foo.js\r\nvar readCache = require('read-cache');\r\n\r\nreadCache('foo.js').then(function (contents) {\r\n\tconsole.log(contents);\r\n});\r\n```\r\n\r\n\r\n## API\r\n\r\n### readCache(path[, encoding])\r\n\r\nReturns a promise that resolves with the file's contents.\r\n\r\n### readCache.sync(path[, encoding])\r\n\r\nReturns the content of the file.\r\n\r\n### readCache.get(path[, encoding])\r\n\r\nReturns the content of cached file or null.\r\n\r\n### readCache.clear()\r\n\r\nClears the contents of the cache.\r\n\r\n\r\n## License\r\n\r\nMIT Â© [Bogdan Chadkin](mailto:trysound@yandex.ru)\r\n","readmeFilename":"README.md","_id":"read-cache@1.0.0","_from":"read-cache@>=1.0.0 <2.0.0"}