{"filter":false,"title":"CCStdParser.py","tooltip":"/ChanceMe/CCStdParser.py","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":137,"column":41},"end":{"row":137,"column":75},"action":"insert","lines":[" \"Unweighted GPA\", \"Weighted GPA\","],"id":2,"ignore":true},{"start":{"row":138,"column":84},"end":{"row":138,"column":106},"action":"insert","lines":["\"Number of APs taken\","]},{"start":{"row":268,"column":0},"end":{"row":307,"column":0},"action":"insert","lines":["","                    #GPA","                    weighted_gpa = 0","                    unweighted_gpa = 0","                    gpa_str = find_between(currententry, \"GPA:\".lower(), \"\\n\")","                    if (gpa_str == \"\"):","                        gpa_str = find_between(currententry, \"GPA:\".lower(), \"rank\")","                    if (gpa_str == \"\"):","                        gpa_str = find_between(currententry, \"GPA (out of 4.0):\".lower(), \"\\n\")","                    if (gpa_str == \"\"):","                        gpa_str = find_between(currententry, \"GPA (out of 4.0):\".lower(), \"rank\")","                    gpa_nums_raw = re.findall(\"\\d+\\.\\d+|\\d+\", gpa_str)","                    gpa_nums = []","                    for i in range (gpa_nums_raw.__len__()):","                        if (2 < float(gpa_nums_raw[i])) and (float(gpa_nums_raw.__len__() < 5)):","                            gpa_nums.append(gpa_nums_raw[i])","","                    #Standardizing the 100 scales","                    for i in range (gpa_nums.__len__()):","                        if (float(gpa_nums[i]) > 70 and float(gpa_nums[i]) < 120):","                            gpa_nums[i] = (float(gpa_nums[i])*4/100).__str__()","                    if (gpa_nums.__len__() == 2):","                        if (float(gpa_nums[0]) >= float(gpa_nums[1])):","                            weighted_gpa = float(gpa_nums[0])","                            unweighted_gpa = float(gpa_nums[1])","                        else:","                            weighted_gpa = float(gpa_nums[1])","                            unweighted_gpa = float(gpa_nums[0])","                    elif (gpa_nums.__len__() == 1):","                        if gpa_str.__contains__(\"weighted\"):","                            weighted_gpa = float(gpa_nums[0])","                        elif (float(gpa_nums[0] > 4)):","                            weighted_gpa = float(gpa_nums[0])","                        else:","                            unweighted_gpa = float(gpa_nums[0])","                    else:","                        weighted_gpa = 0","                        unweighted_gpa = 0","",""]},{"start":{"row":405,"column":33},"end":{"row":405,"column":34},"action":"insert","lines":["("]},{"start":{"row":406,"column":0},"end":{"row":407,"column":0},"action":"insert","lines":["                                 or ap_str.__contains__(\"studio\"))",""]},{"start":{"row":409,"column":32},"end":{"row":409,"column":33},"action":"insert","lines":["("]},{"start":{"row":410,"column":20},"end":{"row":410,"column":73},"action":"remove","lines":["ap_list[7] = ap_str.__contains__(\"english literature\""]},{"start":{"row":410,"column":20},"end":{"row":415,"column":55},"action":"insert","lines":["or (ap_str.__contains__(\"eng\") and ap_str.__contains__(\"lang\") )","                    or ap_str.__contains__(\"writing\")","                    or (ap_str.__contains__(\"comp\") and ap_str.__contains__(\"lang\"))","                    or (ap_str.__contains__(\"lang\") and not ap_str.__contains__(\"spanish\")))","                    ap_list[7] = ap_str.__contains__(\"english literature\") or (ap_str.__contains__(\"lit\")","                    and not ap_str.__contains__(\"span\")"]},{"start":{"row":417,"column":72},"end":{"row":417,"column":103},"action":"insert","lines":[" or ap_str.__contains__(\"euro\")"]},{"start":{"row":421,"column":55},"end":{"row":423,"column":0},"action":"remove","lines":["us\") and ap_str.__contains__(\"gov\")","                    ap_list[14] = ap_str.__contains__(\"us\") and ap_str.__contains__(\"history\")",""]},{"start":{"row":421,"column":55},"end":{"row":426,"column":11},"action":"insert","lines":["gov\")","                    ap_list[14] = (((ap_str.__contains__(\"us\") or ap_str.__contains__(\"u.s.\"))","                                    and ap_str.__contains__(\"his\"))","                                   or ap_str.__contains__(\"ush\") or ap_str.__contains__(\"us\")","                                   or (ap_str.__contains__(\"his\") and not ap_str.__contains__(\"euro\")","           "]},{"start":{"row":426,"column":31},"end":{"row":426,"column":44},"action":"remove","lines":["ap_list[15] ="]},{"start":{"row":426,"column":31},"end":{"row":426,"column":42},"action":"insert","lines":["    and not"]},{"start":{"row":426,"column":71},"end":{"row":426,"column":75},"action":"remove","lines":[" and"]},{"start":{"row":426,"column":71},"end":{"row":427,"column":33},"action":"insert","lines":["))","                    ap_list[15] ="]},{"start":{"row":427,"column":55},"end":{"row":427,"column":62},"action":"remove","lines":["history"]},{"start":{"row":427,"column":55},"end":{"row":427,"column":60},"action":"insert","lines":["world"]},{"start":{"row":428,"column":66},"end":{"row":428,"column":67},"action":"insert","lines":["("]},{"start":{"row":428,"column":92},"end":{"row":429,"column":0},"action":"remove","lines":["",""]},{"start":{"row":428,"column":92},"end":{"row":429,"column":1},"action":"insert","lines":[" and"," "]},{"start":{"row":429,"column":21},"end":{"row":429,"column":34},"action":"remove","lines":["ap_list[17] ="]},{"start":{"row":429,"column":21},"end":{"row":429,"column":37},"action":"insert","lines":["             not"]},{"start":{"row":429,"column":59},"end":{"row":429,"column":69},"action":"remove","lines":["calc\") and"]},{"start":{"row":429,"column":59},"end":{"row":430,"column":33},"action":"insert","lines":["sub\"))","                    ap_list[17] ="]},{"start":{"row":430,"column":55},"end":{"row":430,"column":56},"action":"remove","lines":["b"]},{"start":{"row":430,"column":55},"end":{"row":430,"column":58},"action":"insert","lines":["cal"]},{"start":{"row":432,"column":34},"end":{"row":432,"column":35},"action":"insert","lines":["("]},{"start":{"row":432,"column":97},"end":{"row":433,"column":33},"action":"insert","lines":["","                                 "]},{"start":{"row":433,"column":67},"end":{"row":433,"column":68},"action":"insert","lines":[")"]},{"start":{"row":434,"column":67},"end":{"row":434,"column":98},"action":"insert","lines":[" or ap_str.__contains__(\"stat\")"]},{"start":{"row":439,"column":66},"end":{"row":439,"column":70},"action":"insert","lines":["not "]},{"start":{"row":439,"column":91},"end":{"row":439,"column":100},"action":"remove","lines":["mechanics"]},{"start":{"row":439,"column":91},"end":{"row":439,"column":102},"action":"insert","lines":["electricity"]},{"start":{"row":452,"column":0},"end":{"row":455,"column":49},"action":"insert","lines":["                    countAP = 0","                    for i in range(36):","                        if (ap_list[i]):","                            countAP = countAP + 1"]},{"start":{"row":489,"column":77},"end":{"row":489,"column":78},"action":"remove","lines":[" "]},{"start":{"row":489,"column":77},"end":{"row":489,"column":105},"action":"insert","lines":["unweighted_gpa,weighted_gpa,"]},{"start":{"row":491,"column":72},"end":{"row":491,"column":91},"action":"insert","lines":[" countAP.__str__(),"]},{"start":{"row":493,"column":16},"end":{"row":494,"column":0},"action":"insert","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":8,"column":22},"end":{"row":8,"column":22},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1473533348175,"hash":"2e595042923f6249ab526469dede4733d3177b2a"}